{"version":3,"sources":["db/base.js","constants/mainForm.js","components/PatientDetails/PatientDetails.js","api/index.js","constants/api.js","components/DoctorsAppointment/DoctorsAppointment.js","components/NavBar/NavBar.js","components/MainForm/MainForm.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","FIRST_NAV_TAB","INITIAL_STATE_DOCTORS_APPOINTMENT","patientName","officeAddress","doctorName","doctorValue","isPatientSelected","dateReceipt","INITIAL_STATE_PATIENT","ssn","addressPatient","city","state","zip","phoneNumber","dob","accidentDate","gender","insuranceHolder","phoneNumberHolder","zipHolder","cityHolder","stateHolder","addressHolder","isSameHolder","policyNumber","diagnoses","services","relastionship","isEmployment","isAutoAccident","isOtherAccident","insurance","stateAccident","GENDER_LIST","value","label","INSURANCE_LIST","RELATIONSHIP_LIST","USA_STATES","PatientDetails","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSSNChange","bind","assertThisInitialized","onPatientNameChange","onInsuranceHolderChange","onPolicyNumberChange","onDobChange","onSameHolderChange","onAddressPatientChange","onAddressHolderChange","onStateChange","onStateHolderChange","onGenderChange","onZipChange","onZipHolderChange","onCityChange","onCityHolderChange","onPhoneNumberChange","onPhoneNumberHolderChange","checkValidForm","onEmploymentChange","onAutoAccidentChange","onOtherAccidentChange","onStateAccidentChange","onRelastionshipChange","onAccidentDateChange","onInsuranceChange","onSubmit","event","setState","target","moment","format","_this$state","preventDefault","patient","addPatien","NotificationManager","success","error","_this$state2","react_default","a","createElement","Form","Row","className","form","Col","md","FormGroup","Label","Input","placeholder","onChange","required","react_select_browser_esm","options","defaultValue","type","disabled","check","checked","isDisabled","for","CustomInput","id","name","bsSize","Button","color","size","lib","Component","generateFile","data","url","callback","content","propsData","diagnosesList","diagnosesRemainList","temporaryDate","doctorsList","paySum","temporarySum","allDiagnoses","forEach","list","indexList","slice","element","indexElement","concat","push","length","join","allDoctors","index","_doctorsList$push","defineProperty","npi","signature","allServices","number","replace","parseInt","undefined","find","elem","offices","indexSub","allOffices","search","substr","PizZip","doc","docxtemplater","loadZip","setOptions","nullGetter","setData","objectSpread","allDates","firstServices","secondServices","thirdServices","fourthServices","fifthServices","sixthServices","seventhServices","firstRemain","secondRemain","thirdRemain","fourthRemain","fifthRemain","sixthRemains","seventhRemain","render","e","message","stack","properties","console","log","JSON","stringify","output","getZip","generate","mimeType","dateTimeCreate","Date","now","outputName","saveAs","JSZipUtils","getBinaryContent","DoctorsAppointment","onDataReceiptbChange","onOfficeAddress","onPatientChange","onDoctorChange","onServicesChange","onDiagnosesChange","checkValid","setPatientInfo","getPatientByName","patientId","getPatientIdByValue","setSelectedPatientId","_this$props","patientsList","selectedPatientId","servicesList","Array","isArray","_this$props2","day","setAllData","date","doctor","office","genData","toConsumableArray","doctorList","window","officeAddressList","_this$props3","selectPatientList","entries","map","_ref","_ref2","slicedToArray","val","isMulti","classNamePrefix","closeMenuOnSelect","hideSelectedOptions","NavBar","toggle","tabPosition","Nav","tabs","NavItem","NavLink","classnames","active","onClick","MainForm","activeTab","tab","patients","components_NavBar_NavBar","TabContent","TabPane","tabId","sm","components_DoctorsAppointment_DoctorsAppointment","components_PatientDetails_PatientDetails","App","addPatient","field","selectedPatient","values","_i","_Object$entries","_ref3","key","patientsRef","syncState","context","_this$state3","Container","components_MainForm_MainForm","Boolean","location","hostname","match","ReactDOM","containers_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iUAaMA,SAAMC,EAASC,cAVN,CACbC,OAAQC,0CACRC,WAAYD,gCACZE,YAAaF,uCACbG,UAAWH,gBACXI,cAAeJ,GACfK,kBAAmBL,eACnBM,MAAON,wCAIHO,EAAOC,IAAOC,YAAYb,EAAIc,8GCNvBC,EAAgB,IAUhBC,EAAoC,CAC/CC,YAAa,GACbC,cAAe,GACfC,WAAY,GACZC,YAAa,GACbC,mBAAmB,EACnBC,YAAa,MAIFC,EAAwB,CACnCN,YAAa,GACbO,IAAK,GACLC,eAAgB,GAChBC,KAAM,eACNC,MAAO,KACPC,IAAK,GACLC,YAAa,GACbC,IAAK,KACLC,aAAc,KACdC,OAAQ,GACRC,gBAAiB,GACjBC,kBAAmB,GACnBC,UAAW,GACXC,WAAY,eACZC,YAAa,KACbC,cAAe,GACfC,cAAc,EACdC,aAAc,GACdC,UAAW,GACXC,SAAU,GACVC,cAAe,GACfC,cAAc,EACdC,gBAAgB,EAChBC,iBAAiB,EACjBC,UAAW,GACXC,cAAe,MAGJC,EAAc,CACzB,CAAEC,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,SAAUC,MAAO,WAGfC,EAAiB,CAC1B,CAAEF,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,QAASC,MAAO,UAGhBE,EAAoB,CAC/B,CAAEH,MAAO,YAAQC,MAAO,aACxB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,QAASC,MAAO,UAGdG,EAAa,CACxB,CACIJ,MAAO,UACPC,MAAO,MAEX,CACID,MAAO,SACPC,MAAO,MAEX,CACID,MAAO,iBACPC,MAAO,MAEX,CACID,MAAO,UACPC,MAAO,MAEX,CACID,MAAO,WACPC,MAAO,MAEX,CACID,MAAO,aACPC,MAAO,MAEX,CACID,MAAO,WACPC,MAAO,MAEX,CACID,MAAO,cACPC,MAAO,MAEX,CACID,MAAO,WACPC,MAAO,MAEX,CACID,MAAO,uBACPC,MAAO,MAEX,CACID,MAAO,iCACPC,MAAO,MAEX,CACID,MAAO,UACPC,MAAO,MAEX,CACID,MAAO,UACPC,MAAO,MAEX,CACID,MAAO,OACPC,MAAO,MAEX,CACID,MAAO,SACPC,MAAO,MAEX,CACID,MAAO,QACPC,MAAO,MAEX,CACID,MAAO,WACPC,MAAO,MAEX,CACID,MAAO,UACPC,MAAO,MAEX,CACID,MAAO,OACPC,MAAO,MAEX,CACID,MAAO,SACPC,MAAO,MAEX,CACID,MAAO,WACPC,MAAO,MAEX,CACID,MAAO,YACPC,MAAO,MAEX,CACID,MAAO,QACPC,MAAO,MAEX,CACID,MAAO,mBACPC,MAAO,MAEX,CACID,MAAO,WACPC,MAAO,MAEX,CACID,MAAO,gBACPC,MAAO,MAEX,CACID,MAAO,WACPC,MAAO,MAEX,CACID,MAAO,YACPC,MAAO,MAEX,CACID,MAAO,cACPC,MAAO,MAEX,CACID,MAAO,WACPC,MAAO,MAEX,CACID,MAAO,UACPC,MAAO,MAEX,CACID,MAAO,WACPC,MAAO,MAEX,CACID,MAAO,SACPC,MAAO,MAEX,CACID,MAAO,gBACPC,MAAO,MAEX,CACID,MAAO,aACPC,MAAO,MAEX,CACID,MAAO,aACPC,MAAO,MAEX,CACID,MAAO,WACPC,MAAO,MAEX,CACID,MAAO,iBACPC,MAAO,MAEX,CACID,MAAO,eACPC,MAAO,MAEX,CACID,MAAO,2BACPC,MAAO,MAEX,CACID,MAAO,OACPC,MAAO,MAEX,CACID,MAAO,WACPC,MAAO,MAEX,CACID,MAAO,SACPC,MAAO,MAEX,CACID,MAAO,QACPC,MAAO,MAEX,CACID,MAAO,eACPC,MAAO,MAEX,CACID,MAAO,cACPC,MAAO,MAEX,CACID,MAAO,eACPC,MAAO,MAEX,CACID,MAAO,iBACPC,MAAO,MAEX,CACID,MAAO,eACPC,MAAO,MAEX,CACID,MAAO,YACPC,MAAO,MAEX,CACID,MAAO,QACPC,MAAO,MAEX,CACID,MAAO,OACPC,MAAO,MAEX,CACID,MAAO,UACPC,MAAO,MAEX,CACID,MAAO,iBACPC,MAAO,MAEX,CACID,MAAO,WACPC,MAAO,MAEX,CACID,MAAO,aACPC,MAAO,MAEX,CACID,MAAO,gBACPC,MAAO,MAEX,CACID,MAAO,YACPC,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","file":"static/js/main.2d7aa79f.chunk.js","sourcesContent":["import Rebase from 're-base'\r\nimport firebase from 'firebase'\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n}\r\n\r\nconst app = firebase.initializeApp(config)\r\nconst base = Rebase.createClass(app.database())\r\n\r\nexport { base }","// MAIN FORM\r\nexport const DATE_FORMAT = 'MMDDYYYY'\r\nexport const ERROR_LABEL = 'Error message'\r\nexport const ERROR_MESSAGE = 'Please, fill in all fields!'\r\nexport const SUCCES_MESSAGE = 'You add new patient'\r\nexport const SUCCES_LABEL = 'Success'\r\nexport const SUCCES_GENERATION = 'Generation'\r\nexport const TIMEOUT_MESSAGE = 3000\r\nexport const FIRST_NAV_TAB = '1'\r\nexport const SECOND_NAV_TAB = '2'\r\nexport const SERVICES_FIELD = 'services'\r\nexport const DIAGNOSES_FIELD = 'diagnoses'\r\nexport const TABLE_NAME = 'patients'\r\nexport const MAX_DAY = 7\r\nexport const MIN_DAY = 1\r\n\r\n//DoctorsAppointment\r\n\r\nexport const INITIAL_STATE_DOCTORS_APPOINTMENT = {\r\n  patientName: '',\r\n  officeAddress: '',\r\n  doctorName: '',\r\n  doctorValue: {},\r\n  isPatientSelected: true,\r\n  dateReceipt: null\r\n}\r\n\r\n// PATIENT DETAILS\r\nexport const INITIAL_STATE_PATIENT = {\r\n  patientName: '',\r\n  ssn: '',\r\n  addressPatient: '',\r\n  city: 'Jacksonville',\r\n  state: 'FL',\r\n  zip: '',\r\n  phoneNumber: '',\r\n  dob: null,\r\n  accidentDate: null,\r\n  gender: '',\r\n  insuranceHolder: '',\r\n  phoneNumberHolder: '',\r\n  zipHolder: '',\r\n  cityHolder: 'Jacksonville',\r\n  stateHolder: 'FL',\r\n  addressHolder: '',\r\n  isSameHolder: true,\r\n  policyNumber: '',\r\n  diagnoses: [],\r\n  services: [],\r\n  relastionship: '',\r\n  isEmployment: false,\r\n  isAutoAccident: true,\r\n  isOtherAccident: false,\r\n  insurance: '',\r\n  stateAccident: 'FL'\r\n}\r\n\r\nexport const GENDER_LIST = [\r\n  { value: 'Male', label: 'Male' },\r\n  { value: 'Female', label: 'Female' }\r\n]\r\n\r\nexport const INSURANCE_LIST = [\r\n    { value: 'STATEFARM', label: 'STATEFARM' },\r\n    { value: 'GEICO', label: 'GEICO' }\r\n]\r\n\r\nexport const RELATIONSHIP_LIST = [\r\n  { value: 'Selа', label: 'Selа' },\r\n  { value: 'Spouse', label: 'Spouse' },\r\n  { value: 'Child', label: 'Child' },\r\n  { value: 'Other', label: 'Other' }\r\n]\r\n\r\nexport const USA_STATES = [\r\n  {\r\n      value: \"Alabama\",\r\n      label: \"AL\"\r\n  },\r\n  {\r\n      value: \"Alaska\",\r\n      label: \"AK\"\r\n  },\r\n  {\r\n      value: \"American Samoa\",\r\n      label: \"AS\"\r\n  },\r\n  {\r\n      value: \"Arizona\",\r\n      label: \"AZ\"\r\n  },\r\n  {\r\n      value: \"Arkansas\",\r\n      label: \"AR\"\r\n  },\r\n  {\r\n      value: \"California\",\r\n      label: \"CA\"\r\n  },\r\n  {\r\n      value: \"Colorado\",\r\n      label: \"CO\"\r\n  },\r\n  {\r\n      value: \"Connecticut\",\r\n      label: \"CT\"\r\n  },\r\n  {\r\n      value: \"Delaware\",\r\n      label: \"DE\"\r\n  },\r\n  {\r\n      value: \"District Of Columbia\",\r\n      label: \"DC\"\r\n  },\r\n  {\r\n      value: \"Federated States Of Micronesia\",\r\n      label: \"FM\"\r\n  },\r\n  {\r\n      value: \"Florida\",\r\n      label: \"FL\"\r\n  },\r\n  {\r\n      value: \"Georgia\",\r\n      label: \"GA\"\r\n  },\r\n  {\r\n      value: \"Guam\",\r\n      label: \"GU\"\r\n  },\r\n  {\r\n      value: \"Hawaii\",\r\n      label: \"HI\"\r\n  },\r\n  {\r\n      value: \"Idaho\",\r\n      label: \"ID\"\r\n  },\r\n  {\r\n      value: \"Illinois\",\r\n      label: \"IL\"\r\n  },\r\n  {\r\n      value: \"Indiana\",\r\n      label: \"IN\"\r\n  },\r\n  {\r\n      value: \"Iowa\",\r\n      label: \"IA\"\r\n  },\r\n  {\r\n      value: \"Kansas\",\r\n      label: \"KS\"\r\n  },\r\n  {\r\n      value: \"Kentucky\",\r\n      label: \"KY\"\r\n  },\r\n  {\r\n      value: \"Louisiana\",\r\n      label: \"LA\"\r\n  },\r\n  {\r\n      value: \"Maine\",\r\n      label: \"ME\"\r\n  },\r\n  {\r\n      value: \"Marshall Islands\",\r\n      label: \"MH\"\r\n  },\r\n  {\r\n      value: \"Maryland\",\r\n      label: \"MD\"\r\n  },\r\n  {\r\n      value: \"Massachusetts\",\r\n      label: \"MA\"\r\n  },\r\n  {\r\n      value: \"Michigan\",\r\n      label: \"MI\"\r\n  },\r\n  {\r\n      value: \"Minnesota\",\r\n      label: \"MN\"\r\n  },\r\n  {\r\n      value: \"Mississippi\",\r\n      label: \"MS\"\r\n  },\r\n  {\r\n      value: \"Missouri\",\r\n      label: \"MO\"\r\n  },\r\n  {\r\n      value: \"Montana\",\r\n      label: \"MT\"\r\n  },\r\n  {\r\n      value: \"Nebraska\",\r\n      label: \"NE\"\r\n  },\r\n  {\r\n      value: \"Nevada\",\r\n      label: \"NV\"\r\n  },\r\n  {\r\n      value: \"New Hampshire\",\r\n      label: \"NH\"\r\n  },\r\n  {\r\n      value: \"New Jersey\",\r\n      label: \"NJ\"\r\n  },\r\n  {\r\n      value: \"New Mexico\",\r\n      label: \"NM\"\r\n  },\r\n  {\r\n      value: \"New York\",\r\n      label: \"NY\"\r\n  },\r\n  {\r\n      value: \"North Carolina\",\r\n      label: \"NC\"\r\n  },\r\n  {\r\n      value: \"North Dakota\",\r\n      label: \"ND\"\r\n  },\r\n  {\r\n      value: \"Northern Mariana Islands\",\r\n      label: \"MP\"\r\n  },\r\n  {\r\n      value: \"Ohio\",\r\n      label: \"OH\"\r\n  },\r\n  {\r\n      value: \"Oklahoma\",\r\n      label: \"OK\"\r\n  },\r\n  {\r\n      value: \"Oregon\",\r\n      label: \"OR\"\r\n  },\r\n  {\r\n      value: \"Palau\",\r\n      label: \"PW\"\r\n  },\r\n  {\r\n      value: \"Pennsylvania\",\r\n      label: \"PA\"\r\n  },\r\n  {\r\n      value: \"Puerto Rico\",\r\n      label: \"PR\"\r\n  },\r\n  {\r\n      value: \"Rhode Island\",\r\n      label: \"RI\"\r\n  },\r\n  {\r\n      value: \"South Carolina\",\r\n      label: \"SC\"\r\n  },\r\n  {\r\n      value: \"South Dakota\",\r\n      label: \"SD\"\r\n  },\r\n  {\r\n      value: \"Tennessee\",\r\n      label: \"TN\"\r\n  },\r\n  {\r\n      value: \"Texas\",\r\n      label: \"TX\"\r\n  },\r\n  {\r\n      value: \"Utah\",\r\n      label: \"UT\"\r\n  },\r\n  {\r\n      value: \"Vermont\",\r\n      label: \"VT\"\r\n  },\r\n  {\r\n      value: \"Virgin Islands\",\r\n      label: \"VI\"\r\n  },\r\n  {\r\n      value: \"Virginia\",\r\n      label: \"VA\"\r\n  },\r\n  {\r\n      value: \"Washington\",\r\n      label: \"WA\"\r\n  },\r\n  {\r\n      value: \"West Virginia\",\r\n      label: \"WV\"\r\n  },\r\n  {\r\n      value: \"Wisconsin\",\r\n      label: \"WI\"\r\n  },\r\n  {\r\n      value: \"Wyoming\",\r\n      label: \"WY\"\r\n  }\r\n]","import React, { Component } from 'react'\r\nimport { Button, Form, FormGroup, Label, Input, Col, Row, CustomInput } from 'reactstrap'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\r\nimport {\r\n  INITIAL_STATE_PATIENT, GENDER_LIST,\r\n  USA_STATES, DATE_FORMAT, ERROR_LABEL,\r\n  ERROR_MESSAGE, TIMEOUT_MESSAGE,\r\n  SUCCES_MESSAGE, SUCCES_LABEL,\r\n  RELATIONSHIP_LIST, INSURANCE_LIST\r\n} from '../../constants/mainForm'\r\nimport moment from 'moment'\r\nimport Select from 'react-select'\r\nimport './PatientDetails.scss'\r\nimport PropTypes from 'prop-types'\r\nimport 'react-notifications/lib/notifications.css'\r\n\r\nclass PatientDetails extends Component {\r\n  static propTypes = {\r\n    addPatien: PropTypes.func.isRequired\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = INITIAL_STATE_PATIENT\r\n    this.onSSNChange = this.onSSNChange.bind(this)\r\n    this.onPatientNameChange = this.onPatientNameChange.bind(this)\r\n    this.onInsuranceHolderChange = this.onInsuranceHolderChange.bind(this)\r\n    this.onPolicyNumberChange = this.onPolicyNumberChange.bind(this)\r\n    this.onDobChange = this.onDobChange.bind(this)\r\n    this.onSameHolderChange = this.onSameHolderChange.bind(this)\r\n    this.onAddressPatientChange = this.onAddressPatientChange.bind(this)\r\n    this.onAddressHolderChange = this.onAddressHolderChange.bind(this)\r\n    this.onStateChange = this.onStateChange.bind(this)\r\n    this.onStateHolderChange = this.onStateHolderChange.bind(this)\r\n    this.onGenderChange = this.onGenderChange.bind(this)\r\n    this.onZipChange = this.onZipChange.bind(this)\r\n    this.onZipHolderChange = this.onZipHolderChange.bind(this)\r\n    this.onCityChange = this.onCityChange.bind(this)\r\n    this.onCityHolderChange = this.onCityHolderChange.bind(this)\r\n    this.onPhoneNumberChange = this.onPhoneNumberChange.bind(this)\r\n    this.onPhoneNumberHolderChange = this.onPhoneNumberHolderChange.bind(this)\r\n    this.checkValidForm = this.checkValidForm.bind(this)\r\n    this.onEmploymentChange = this.onEmploymentChange.bind(this)\r\n    this.onAutoAccidentChange = this.onAutoAccidentChange.bind(this)\r\n    this.onOtherAccidentChange = this.onOtherAccidentChange.bind(this)\r\n    this.onStateAccidentChange = this.onStateAccidentChange.bind(this)\r\n    this.onRelastionshipChange = this.onRelastionshipChange.bind(this)\r\n    this.onAccidentDateChange = this.onAccidentDateChange.bind(this)\r\n    this.onInsuranceChange = this.onInsuranceChange.bind(this)\r\n    this.onSubmit = this.onSubmit.bind(this)\r\n  }\r\n\r\n  onSSNChange(event) {\r\n    this.setState({ ssn: event.target.value })\r\n  }\r\n\r\n  onRelastionshipChange(event) {\r\n    this.setState({ relastionship: event.value })\r\n  }\r\n\r\n  onEmploymentChange(event) {\r\n    const { isEmployment } = this.state\r\n    this.setState({ isEmployment: !isEmployment })\r\n  }\r\n\r\n  onAutoAccidentChange(event) {\r\n    const { isAutoAccident } = this.state\r\n    this.setState({ isAutoAccident: !isAutoAccident })\r\n  }\r\n\r\n  onOtherAccidentChange(event) {\r\n    const { isOtherAccident } = this.state\r\n    this.setState({ isOtherAccident: !isOtherAccident })\r\n  }\r\n\r\n  onStateAccidentChange(event) {\r\n    this.setState({ stateAccident: event.target.value })\r\n  }\r\n\r\n  onPatientNameChange(event) {\r\n    this.setState({\r\n      patientName: event.target.value\r\n    })\r\n    if (this.state.isSameHolder) {\r\n      this.setState({\r\n        insuranceHolder: event.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  onInsuranceHolderChange(event) {\r\n    this.setState({ insuranceHolder: event.target.value })\r\n  }\r\n\r\n  onPolicyNumberChange(event) {\r\n    this.setState({ policyNumber: event.target.value })\r\n  }\r\n\r\n  onAddressPatientChange(event) {\r\n    this.setState({ addressPatient: event.target.value })\r\n    if (this.state.isSameHolder) {\r\n      this.setState({\r\n        addressHolder: event.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  onAddressHolderChange(event) {\r\n    this.setState({ addressHolder: event.target.value })\r\n  }\r\n\r\n  onDobChange(event) {\r\n    this.setState({\r\n      dob: moment(event.target.value).format(DATE_FORMAT)\r\n    })\r\n  }\r\n\r\n  onAccidentDateChange(event) {\r\n    this.setState({\r\n      accidentDate: moment(event.target.value).format(DATE_FORMAT)\r\n    })\r\n  }\r\n\r\n  onCityChange(event) {\r\n    this.setState({ city: event.target.value })\r\n    if (this.state.isSameHolder) {\r\n      this.setState({\r\n        cityHolder: event.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  onCityHolderChange(event) {\r\n    this.setState({ cityHolder: event.target.value })\r\n  }\r\n\r\n  onStateChange(event) {\r\n    this.setState({ state: event.label })\r\n    if (this.state.isSameHolder) {\r\n      this.setState({\r\n        stateHolder: event.label\r\n      })\r\n    }\r\n  }\r\n\r\n  onStateHolderChange(event) {\r\n    this.setState({ stateHolder: event.label })\r\n  }\r\n\r\n  onPhoneNumberChange(event) {\r\n    this.setState({ phoneNumber: event.target.value })\r\n    if (this.state.isSameHolder) {\r\n      this.setState({\r\n        phoneNumberHolder: event.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  onPhoneNumberHolderChange(event) {\r\n    this.setState({ phoneNumberHolder: event.target.value })\r\n  }\r\n\r\n  onGenderChange(event) {\r\n    this.setState({ gender: event.value })\r\n  }\r\n\r\n  onInsuranceChange(event) {\r\n    this.setState({ insurance: event.value })\r\n  }\r\n\r\n  onOfficeAddressChange(event) {\r\n    this.setState({ officeAddress: event.value })\r\n  }\r\n\r\n  onZipChange(event) {\r\n    this.setState({ zip: event.target.value })\r\n    if (this.state.isSameHolder) {\r\n      this.setState({\r\n        zipHolder: event.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  onZipHolderChange(event) {\r\n    this.setState({ zipHolder: event.target.value })\r\n  }\r\n\r\n  onSameHolderChange() {\r\n    const { isSameHolder, patientName, phoneNumber, zip,\r\n      city, state, addressPatient\r\n    } = this.state\r\n    !(isSameHolder) ? this.setState({\r\n      insuranceHolder: patientName,\r\n      phoneNumberHolder: phoneNumber,\r\n      zipHolder: zip,\r\n      cityHolder: city,\r\n      stateHolder: state,\r\n      addressHolder: addressPatient,\r\n    }) : this.setState({\r\n      insuranceHolder: '',\r\n      phoneNumberHolder: '',\r\n      zipHolder: '',\r\n      cityHolder: '',\r\n      stateHolder: '',\r\n      addressHolder: '',\r\n    })\r\n    this.setState({\r\n      isSameHolder: !isSameHolder\r\n    })\r\n  }\r\n\r\n  checkValidForm() {\r\n    return this.state.gender && this.state.state && \r\n      this.state.insurance && this.state.relastionship && \r\n      this.state.stateHolder\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault()\r\n    if (this.checkValidForm()) {\r\n      const patient = this.state\r\n      delete patient.isSameHolder\r\n      this.props.addPatien(patient)\r\n      NotificationManager.success(\r\n        SUCCES_MESSAGE,\r\n        SUCCES_LABEL,\r\n        TIMEOUT_MESSAGE\r\n      )\r\n    } else {\r\n      NotificationManager.error(\r\n        ERROR_LABEL,\r\n        ERROR_MESSAGE,\r\n        TIMEOUT_MESSAGE\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n      isEmployment, isAutoAccident, isSameHolder,\r\n      isOtherAccident, stateAccident\r\n    } = this.state\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Row className='input-label' form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label>Full name patient:</Label>\r\n              <Input\r\n                placeholder='full name patient...'\r\n                onChange={this.onPatientNameChange}\r\n                required\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label>Social Security Number (SSN):</Label>\r\n              <Input\r\n                placeholder='ssn...'\r\n                onChange={this.onSSNChange}\r\n                required\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <FormGroup>\r\n              <Label>Insurance name:</Label>\r\n              <Select\r\n                placeholder='...'\r\n                options={INSURANCE_LIST}\r\n                onChange={this.onInsuranceChange}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <FormGroup>\r\n          <Label>Address patient:</Label>\r\n          <Input\r\n            placeholder='address patient...'\r\n            onChange={this.onAddressPatientChange}\r\n            required\r\n          />\r\n        </FormGroup>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label>City:</Label>\r\n              <Input\r\n                placeholder='city patient...'\r\n                onChange={this.onCityChange}\r\n                required\r\n                defaultValue=\"Jacksonville\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label>State:</Label>\r\n              <Select\r\n                placeholder='state patient...'\r\n                options={USA_STATES}\r\n                onChange={this.onStateChange}\r\n                defaultValue={{\r\n                  value: \"Florida\",\r\n                  label: \"FL\"\r\n                }}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <FormGroup>\r\n              <Label>Zip:</Label>\r\n              <Input\r\n                placeholder='zip patient...'\r\n                onChange={this.onZipChange}\r\n                required\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label>Phone number:</Label>\r\n              <Input\r\n                placeholder='phone number...'\r\n                onChange={this.onPhoneNumberChange}\r\n                required\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label>Date of Birth:</Label>\r\n              <Input\r\n                type='date'\r\n                placeholder='date of birth...'\r\n                onChange={this.onDobChange}\r\n                required\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <FormGroup>\r\n              <Label>Gender:</Label>\r\n              <Select\r\n                placeholder='gender...'\r\n                options={GENDER_LIST}\r\n                onChange={this.onGenderChange}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row className='line' form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label>Full name insurance holder:</Label>\r\n              <Input\r\n                placeholder='full name insurance holder...'\r\n                value={this.state.insuranceHolder}\r\n                disabled={isSameHolder}\r\n                onChange={this.onInsuranceHolderChange}\r\n                required\r\n              />\r\n              <Label check className='check-box'>\r\n                <Input\r\n                  type='checkbox'\r\n                  checked={isSameHolder}\r\n                  onChange={this.onSameHolderChange}\r\n                />{' '}\r\n                the name of the insurer matches the name of the patient\r\n                </Label>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label>Palicy Number:</Label>\r\n              <Input\r\n                placeholder='palicy number...'\r\n                onChange={this.onPolicyNumberChange}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label>Address:</Label>\r\n              <Input\r\n                placeholder='address holder...'\r\n                onChange={this.onAddressHolderChange}\r\n                value={this.state.addressHolder}\r\n                disabled={isSameHolder}\r\n                required\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label>Phone number:</Label>\r\n              <Input\r\n                placeholder='phone number...'\r\n                onChange={this.onPhoneNumberHolderChange}\r\n                value={this.state.phoneNumberHolder}\r\n                disabled={isSameHolder}\r\n                required\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label>City:</Label>\r\n              <Input\r\n                placeholder='city holder...'\r\n                onChange={this.onCityHolderChange}\r\n                value={this.state.cityHolder}\r\n                disabled={isSameHolder}\r\n                defaultValue=\"Jacksonville\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label>State:</Label>\r\n              <Select\r\n                placeholder='state holder...'\r\n                options={USA_STATES}\r\n                onChange={this.onStateHolderChange}\r\n                isDisabled={isSameHolder}\r\n                defaultValue={{\r\n                  value: \"Florida\",\r\n                  label: \"FL\"\r\n                }}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <FormGroup>\r\n              <Label>Zip:</Label>\r\n              <Input\r\n                placeholder='zip holder...'\r\n                onChange={this.onZipHolderChange}\r\n                value={this.state.zipHolder}\r\n                disabled={isSameHolder}\r\n                required\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row className='line' form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label>Patient to relationship to insured:</Label>\r\n              <Select\r\n                placeholder='...'\r\n                options={RELATIONSHIP_LIST}\r\n                onChange={this.onRelastionshipChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Accident date:</Label>\r\n              <Input\r\n                type='date'\r\n                placeholder='accident date...'\r\n                onChange={this.onAccidentDateChange}\r\n                required\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for='exampleCheckbox'>Is patients condition related to:</Label>\r\n              <div>\r\n                <CustomInput\r\n                  type='switch'\r\n                  id='exampleCustomSwitch'\r\n                  name='customSwitch'\r\n                  label='EMPLOYMENT? (Courrent or Previous)'\r\n                  onChange={this.onEmploymentChange}\r\n                  checked={isEmployment}\r\n                />\r\n                <Row>\r\n                  <Col md={3}>\r\n                    <CustomInput\r\n                      type='switch'\r\n                      id='exampleCustomSwitch2'\r\n                      name='customSwitch'\r\n                      label='AUTO ACCIDENT?'\r\n                      onChange={this.onAutoAccidentChange}\r\n                      checked={isAutoAccident}\r\n                    />\r\n                  </Col>\r\n                  <Col className='inputState' md={2}>\r\n                    State:\r\n                      <Input\r\n                      bsSize='sm'\r\n                      value={stateAccident}\r\n                      onChange={this.onStateAccidentChange}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <CustomInput\r\n                  type='switch'\r\n                  id='exampleCustomSwitch3'\r\n                  label='OTHER ACCIDENT?'\r\n                  onChange={this.onOtherAccidentChange}\r\n                  checked={isOtherAccident}\r\n                />\r\n              </div>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Button color='secondary' size='lg'>Add</Button>\r\n        <NotificationContainer />\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PatientDetails","import docxtemplater  from 'docxtemplater'\r\nimport JSZipUtils from 'jszip-utils'\r\nimport { saveAs } from 'file-saver'\r\nimport PizZip from 'pizzip'\r\nimport moment from 'moment'\r\nimport {\r\n  MINE_TYPE,\r\n  TYPE_OUTPUT,\r\n  DATE_FORMAT,\r\n  CODE_97110,\r\n  CODE_97530,\r\n  CODE_97140,\r\n  CODE_98940,\r\n  CODE_98941,\r\n  CODE_98942,\r\n  CODE_99202,\r\n  CODE_99203,\r\n  CODE_99212,\r\n  CODE_99213\r\n} from '../constants/api'\r\n\r\nconst loadFile = (url, callback) => {\r\n  JSZipUtils.getBinaryContent(url, callback)\r\n}\r\n\r\nexport const generateFile = (data, patient) => {\r\n  loadFile(process.env.REACT_APP_URL_DOCX, (error, content) => {\r\n    if (error) {\r\n      throw error\r\n    }\r\n\r\n    let propsData = data\r\n\r\n    let diagnosesList = []\r\n    let diagnosesRemainList = []\r\n    let temporaryDate = null\r\n    let doctorsList = []\r\n    let paySum = []\r\n    let temporarySum = 0\r\n    //const accidentDate = moment(patient.accidentDate).format('MM DD YYYY') // TODO: CHECK FORMAT\r\n\r\n    propsData.allDiagnoses.forEach((list, indexList) => {\r\n      temporaryDate = {}\r\n      list.slice(0, 11).forEach((element, indexElement) => {\r\n        temporaryDate[`dai_${indexList}_${indexElement}`] = element.value\r\n      })\r\n      diagnosesList.push(temporaryDate)\r\n      diagnosesRemainList.push(\r\n        list.slice(11, list.length - 1).join()\r\n      )\r\n    })\r\n\r\n    propsData.allDoctors.forEach((element, index) => {\r\n      doctorsList.push({\r\n        [`dN_${index}`]: element.name,\r\n        [`npi_${index}`]: element.npi,\r\n        [`sig_${index}`]: element.signature\r\n      })\r\n    })\r\n\r\n    propsData.allServices.forEach((list, index) => {\r\n      temporarySum = 0\r\n      list.forEach((element, number) => {\r\n        element.value = element.value.replace(`${element.label}_`, '')\r\n        temporarySum += parseInt(element.value)\r\n        if ((element.label === CODE_97110) && \r\n            (list.find(elem => elem.label === CODE_97530) !== undefined)) {\r\n          propsData.allServices[index][number].label = `${CODE_97110} 59`\r\n        } else if ((element.label === CODE_97140) && \r\n                   (list.find(elem => ((elem.label === CODE_98940) || \r\n                   (elem.label === CODE_98941) || \r\n                   (elem.label === CODE_98942) )) !== undefined)) {\r\n          propsData.allServices[index][number].label = `${CODE_97140} 59`\r\n        } else if (((element.label === CODE_99202) || (element.label === CODE_99203) ||\r\n                   (element.label === CODE_99212) || (element.label === CODE_99213)) && \r\n                   propsData.allServices[index].length > 1) {\r\n          propsData.allServices[index][number].label = `${element.label} 25`\r\n        }\r\n      })\r\n      paySum.push({\r\n        [`sum_${index}`]: temporarySum\r\n      })\r\n    })\r\n\r\n    const offices = {}\r\n    let indexSub = null\r\n    data.allOffices.forEach((element, index) => {\r\n      indexSub = element.search(/JACKSONVILLE/i)\r\n      offices[`of_${index}_1`] = element.substr(0, indexSub)\r\n      offices[`of_${index}_2`] = element.substr(indexSub + 1)\r\n    })\r\n\r\n    const zip = new PizZip(content)\r\n    const doc = new docxtemplater().loadZip(zip)\r\n    doc.setOptions({ nullGetter: () => {\r\n      return ''\r\n    }})\r\n    doc.setData({\r\n      ...patient,\r\n      ...propsData.allDates,\r\n      ...offices,\r\n\r\n      firstServices: propsData.allServices[0],\r\n      secondServices: propsData.allServices[1],\r\n      thirdServices: propsData.allServices[2],\r\n      fourthServices: propsData.allServices[3],\r\n      fifthServices: propsData.allServices[4],\r\n      sixthServices: propsData.allServices[5],\r\n      seventhServices: propsData.allServices[6],\r\n\r\n      firstRemain: diagnosesRemainList[0],\r\n      secondRemain: diagnosesRemainList[1],\r\n      thirdRemain: diagnosesRemainList[2],\r\n      fourthRemain: diagnosesRemainList[3],\r\n      fifthRemain: diagnosesRemainList[4],\r\n      sixthRemains: diagnosesRemainList[5],\r\n      seventhRemain: diagnosesRemainList[6],\r\n\r\n      ...diagnosesList[0],\r\n      ...diagnosesList[1],\r\n      ...diagnosesList[2],\r\n      ...diagnosesList[3],\r\n      ...diagnosesList[4],\r\n      ...diagnosesList[5],\r\n      ...diagnosesList[6],\r\n\r\n      ...doctorsList[0],\r\n      ...doctorsList[1],\r\n      ...doctorsList[2],\r\n      ...doctorsList[3],\r\n      ...doctorsList[4],\r\n      ...doctorsList[5],\r\n      ...doctorsList[6],\r\n\r\n      ...paySum[0],\r\n      ...paySum[1],\r\n      ...paySum[2],\r\n      ...paySum[3],\r\n      ...paySum[4],\r\n      ...paySum[5],\r\n      ...paySum[6],\r\n    })\r\n\r\n    try {\r\n      doc.render()\r\n    }\r\n    catch (error) {\r\n      const e = {\r\n        message: error.message,\r\n        name: error.name,\r\n        stack: error.stack,\r\n        properties: error.properties,\r\n      }\r\n      console.log(JSON.stringify({ error: e }))\r\n      throw error\r\n    }\r\n\r\n    const output = doc.getZip().generate({\r\n      type: TYPE_OUTPUT,\r\n      mimeType: MINE_TYPE,\r\n    })\r\n    const dateTimeCreate = moment(Date.now()).format(DATE_FORMAT)\r\n    const outputName = `report_${ dateTimeCreate }.docx`\r\n    saveAs(output, outputName)\r\n  })\r\n}","export const URL_TEMPLATE = '/tag-example.docx'\r\nexport const MINE_TYPE = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\nexport const DATE_FORMAT = 'YYYY_MM_DD_HH_mm_ss'\r\nexport const TYPE_OUTPUT = 'blob'\r\nexport const CODE_97110 = '97110'\r\nexport const CODE_97530 = '97530'\r\nexport const CODE_97140 = '97140'\r\nexport const CODE_98940 = '98940'\r\nexport const CODE_98941 = '98941'\r\nexport const CODE_98942 = '98942'\r\nexport const CODE_99202 = '99202'\r\nexport const CODE_99203 = '99203'\r\nexport const CODE_99212 = '99212'\r\nexport const CODE_99213 = '99213'","import React, { Component } from 'react'\r\nimport { Button, Form, FormGroup, Label, Input, Col, Row } from 'reactstrap'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\r\nimport {\r\n  INITIAL_STATE_DOCTORS_APPOINTMENT,\r\n  DATE_FORMAT, ERROR_LABEL, SUCCES_LABEL,\r\n  ERROR_MESSAGE, TIMEOUT_MESSAGE, SUCCES_GENERATION,\r\n  SERVICES_FIELD, DIAGNOSES_FIELD,\r\n  MIN_DAY, MAX_DAY\r\n} from '../../constants/mainForm'\r\nimport { generateFile } from '../../api/index'\r\nimport moment from 'moment'\r\nimport Select from 'react-select'\r\nimport 'react-notifications/lib/notifications.css'\r\nimport './DoctorsAppointment.scss'\r\n\r\nclass DoctorsAppointment extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = INITIAL_STATE_DOCTORS_APPOINTMENT\r\n    this.onDataReceiptbChange = this.onDataReceiptbChange.bind(this)\r\n    this.onOfficeAddress = this.onOfficeAddress.bind(this)\r\n    this.onPatientChange = this.onPatientChange.bind(this)\r\n    this.onDoctorChange = this.onDoctorChange.bind(this)\r\n    this.onServicesChange = this.onServicesChange.bind(this)\r\n    this.onDiagnosesChange = this.onDiagnosesChange.bind(this)\r\n    this.checkValid = this.checkValid.bind(this)\r\n    this.onSubmit = this.onSubmit.bind(this)\r\n  }\r\n\r\n  onDataReceiptbChange(event) {\r\n    this.setState({\r\n      dateReceipt: moment(event.target.value).format(DATE_FORMAT)\r\n    })\r\n  }\r\n\r\n  onServicesChange(event) {\r\n    this.props.setPatientInfo(event, SERVICES_FIELD)\r\n  }\r\n  \r\n  onOfficeAddress(event) {\r\n    this.setState({ officeAddress: event.value })\r\n  }\r\n\r\n  onPatientChange(event) {\r\n    const patient = this.props.getPatientByName(event.value)\r\n    const patientId = this.props.getPatientIdByValue(patient)\r\n    this.props.setSelectedPatientId(patientId)\r\n    this.setState({\r\n      patientName: event.value,\r\n      isPatientSelected: false\r\n    })\r\n  }\r\n\r\n  onDoctorChange(event) {\r\n    this.setState({ \r\n      doctorName: event.label,\r\n      doctorValue: event.value\r\n    })\r\n  }\r\n\r\n  onDiagnosesChange(event) {\r\n    this.props.setPatientInfo(event, DIAGNOSES_FIELD )\r\n  }\r\n\r\n  checkValid() {\r\n    const { doctorName, patientName, officeAddress } = this.state\r\n    const { patientsList, selectedPatientId } = this.props\r\n    const servicesList = patientsList[selectedPatientId].services\r\n    const diagnosesList = patientsList[selectedPatientId].diagnoses\r\n    return officeAddress && doctorName && patientName && \r\n           Array.isArray(servicesList) && servicesList.length && \r\n           Array.isArray(diagnosesList) && diagnosesList.length\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault()\r\n    if (this.checkValid()) {\r\n      const { \r\n        patientsList,\r\n        selectedPatientId,\r\n        day,\r\n        allServices,\r\n        allDiagnoses,\r\n        allDoctors,\r\n        allDates,\r\n        allOffices,\r\n      } = this.props\r\n      const { doctorValue, officeAddress, dateReceipt } = this.state\r\n\r\n      this.props.setAllData({\r\n        services: patientsList[selectedPatientId].services,\r\n        date: dateReceipt,\r\n        diagnoses: patientsList[selectedPatientId].diagnoses,\r\n        doctor: doctorValue,\r\n        office: officeAddress\r\n      })\r\n      if (day === MAX_DAY) {\r\n        const genData = {\r\n          allServices: [...allServices, patientsList[selectedPatientId].services],\r\n          allDiagnoses: [...allDiagnoses, patientsList[selectedPatientId].diagnoses],\r\n          allDoctors: [...allDoctors, doctorValue],\r\n          allDates: [...allDates, dateReceipt],\r\n          allOffices: [...allOffices, officeAddress]\r\n        }\r\n        try {\r\n          generateFile(genData, patientsList[selectedPatientId])\r\n          NotificationManager.success(\r\n            SUCCES_GENERATION,\r\n            SUCCES_LABEL,\r\n            TIMEOUT_MESSAGE\r\n          )\r\n        } catch (e) {\r\n          NotificationManager.error(\r\n            ERROR_LABEL,\r\n            '',\r\n            TIMEOUT_MESSAGE\r\n          )\r\n        }\r\n      }\r\n    } else {\r\n      NotificationManager.error(\r\n        ERROR_LABEL,\r\n        ERROR_MESSAGE,\r\n        TIMEOUT_MESSAGE\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const doctorList = window.doctorList\r\n    const servicesList = window.servicesList\r\n    const officeAddressList = window.officeAddressList\r\n    const diagnosesList = window.diagnosesList\r\n    const { patientsList, selectedPatientId, day } = this.props\r\n    const { isPatientSelected } = this.state\r\n    const selectPatientList = []\r\n    Object.entries(patientsList).map(([key, val]) => {\r\n      return (\r\n        selectPatientList.push({\r\n          value: val.patientName,\r\n          label: val.patientName\r\n        })\r\n      )\r\n    })\r\n\r\n    return (\r\n      <Form onSubmit={ this.onSubmit }>\r\n        <h4 className='input-label'>Input info for { day } day:</h4>\r\n        <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label>Patient:</Label>\r\n                <Select \r\n                  options={ selectPatientList }\r\n                  onChange={ this.onPatientChange }\r\n                  isDisabled={ day !== MIN_DAY }\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label>Date of Receipt:</Label>\r\n                <Input\r\n                  type='date'\r\n                  placeholder='date of receipt...'\r\n                  onChange={ this.onDataReceiptbChange }\r\n                  required\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label>Office address:</Label>\r\n                <Select\r\n                  options={ officeAddressList }\r\n                  onChange={ this.onOfficeAddress }\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label>Doctor:</Label>\r\n                <Select \r\n                  options={ doctorList }\r\n                  onChange={ this.onDoctorChange }\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n              <Label>Diagnoses:</Label>\r\n              <Select\r\n                isMulti name='colors' options={ diagnosesList }\r\n                className='basic-multi-select'\r\n                classNamePrefix='select'\r\n                closeMenuOnSelect={ false }\r\n                hideSelectedOptions={ true }\r\n                onChange={ this.onDiagnosesChange }\r\n                isDisabled={ isPatientSelected }\r\n                value={ selectedPatientId && patientsList[selectedPatientId].diagnoses }\r\n              />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n              <Label>Selection of services rendered:</Label>\r\n              <Select\r\n                isMulti name='colors' options={ servicesList }\r\n                className='basic-multi-select'\r\n                classNamePrefix='select'\r\n                closeMenuOnSelect={ false }\r\n                hideSelectedOptions={ true }\r\n                onChange={ this.onServicesChange }\r\n                isDisabled={ isPatientSelected }\r\n                value={ selectedPatientId && patientsList[selectedPatientId].services }\r\n              />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        <Button color='secondary' size='lg'>Submit</Button>\r\n        <NotificationContainer />\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DoctorsAppointment","import React, { Component } from 'react'\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nexport { FIRST_NAV_TAB, SECOND_NAV_TAB } from '../../constants/mainForm'\r\n\r\nconst FIRST_NAV_TAB = '1' // DO EXPORT\r\nconst SECOND_NAV_TAB = '2'  // DO EXPORT\r\n\r\nclass NavBar extends Component {\r\n  static propTypes = {\r\n    toggle: PropTypes.func.isRequired,\r\n    tabPosition: PropTypes.string.isRequired\r\n  }\r\n\r\n  render() {\r\n    const { toggle, tabPosition } = this.props\r\n    return (\r\n      <Nav tabs>\r\n        <NavItem>\r\n          <NavLink\r\n            className={\r\n              classnames({\r\n                active: tabPosition === FIRST_NAV_TAB\r\n              })\r\n            }\r\n            onClick={ () => toggle(FIRST_NAV_TAB) }\r\n          >\r\n            Doctor's Appointment\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={\r\n              classnames({\r\n                active: tabPosition === SECOND_NAV_TAB\r\n              })\r\n            }\r\n            onClick={ () => toggle(SECOND_NAV_TAB) }\r\n          >\r\n            Patient Details\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavBar","import React, { Component } from 'react'\r\nimport { TabContent, TabPane, Row, Col } from 'reactstrap'\r\nimport PatientDetails from '../PatientDetails/PatientDetails'\r\nimport DoctorsAppointment from '../DoctorsAppointment/DoctorsAppointment'\r\nimport { FIRST_NAV_TAB  } from '../../constants/mainForm'\r\nimport NavBar from '../NavBar/NavBar'\r\nimport PropTypes from 'prop-types'\r\nimport './MainForm.scss'\r\n\r\nclass MainForm extends Component {\r\n  static propTypes = {\r\n    addPatien: PropTypes.func.isRequired\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      activeTab: FIRST_NAV_TAB\r\n    }\r\n    this.toggle = this.toggle.bind(this)\r\n  }\r\n\r\n  toggle(tab) {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { activeTab } = this.state\r\n    const { patients } = this.props\r\n    return (\r\n      <div className='main-form'>\r\n        <h2>Medrepot-generator</h2>\r\n        <NavBar toggle={ this.toggle } tabPosition={ activeTab } />\r\n        <TabContent activeTab={ activeTab }>\r\n          <TabPane tabId='1'>\r\n            <Row>\r\n              <Col sm='12'>\r\n                <DoctorsAppointment\r\n                  patientsList={ patients }\r\n                  getPatientByName={ this.props.getPatientByName }\r\n                  setSelectedPatientId={ this.props.setSelectedPatientId }\r\n                  getPatientIdByValue={ this.props.getPatientIdByValue }\r\n                  setPatientInfo={ this.props.setPatientInfo }\r\n                  selectedPatientId={ this.props.selectedPatientId }\r\n                  setAllData={ this.props.setAllData }\r\n                  day={ this.props.day }\r\n                  allServices={ this.props.allServices }\r\n                  allDiagnoses={ this.props.allDiagnoses }\r\n                  allDoctors={ this.props.allDoctors }\r\n                  allDates={ this.props.allDates }\r\n                  allOffices={ this.props.allOffices }\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId='2'>\r\n            <Row>\r\n              <Col sm='12'>\r\n                <PatientDetails addPatien={ this.props.addPatien } />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n        </TabContent>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainForm","import React, { Component } from 'react'\r\nimport './App.scss'\r\nimport { Container } from 'reactstrap'\r\nimport { base } from '../../db/base'\r\nimport MainForm from '../../components/MainForm/MainForm'\r\nimport { SERVICES_FIELD, TABLE_NAME, MAX_DAY, MIN_DAY } from '../../constants/mainForm'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      patients: {},\r\n      selectedPatientId: '',\r\n      allServices: [],\r\n      allDiagnoses: [],\r\n      allDoctors: [],\r\n      allDates: [],\r\n      allOffices: [],\r\n      day: 1\r\n    }\r\n    this.addPatient = this.addPatient.bind(this)\r\n    this.setSelectedPatientId = this.setSelectedPatientId.bind(this)\r\n    this.setPatientInfo = this.setPatientInfo.bind(this)\r\n    this.getPatientByName = this.getPatientByName.bind(this)\r\n    this.getPatientIdByValue = this.getPatientIdByValue.bind(this)\r\n    this.setAllData = this.setAllData.bind(this)\r\n  }\r\n\r\n  addPatient(data) {\r\n    const patientsList = { ...this.state.patients }\r\n    const id = Date.now()\r\n    patientsList[id] = {\r\n      ...data,\r\n      diagnoses: [],\r\n      services: []\r\n    }\r\n    this.setState({ patients: patientsList })\r\n  }\r\n\r\n  setPatientInfo(data, field) {\r\n    const { patients, selectedPatientId } = this.state\r\n    const patientsList = { ...patients }\r\n    const selectedPatient = patientsList[selectedPatientId]\r\n    if (field === SERVICES_FIELD) {\r\n      selectedPatient.services = data\r\n    } else {\r\n      selectedPatient.diagnoses = data\r\n    }\r\n    patientsList[selectedPatientId] = selectedPatient\r\n    this.setState({ patients: patientsList })\r\n  }\r\n\r\n  setSelectedPatientId(id) {\r\n    this.setState({\r\n      selectedPatientId: id\r\n    })\r\n  }\r\n\r\n  setAllData(data) {\r\n    const {\r\n      allServices, allDates, allDiagnoses, allDoctors, allOffices, day\r\n    } = this.state\r\n    this.setState({\r\n      allServices: (day !== MAX_DAY) ? [...allServices, data.services] : [],\r\n      allDates: (day !== MAX_DAY) ? [...allDates, data.date] : [],\r\n      allDiagnoses: (day !== MAX_DAY) ? [...allDiagnoses, data.diagnoses] : [],\r\n      allDoctors: (day !== MAX_DAY) ? [...allDoctors, data.doctor] : [],\r\n      allOffices: (day !== MAX_DAY) ? [...allOffices, data.office] : [],\r\n      day: (day !== MAX_DAY) ? (day + MIN_DAY) : MIN_DAY\r\n    })\r\n  }\r\n\r\n  getPatientByName(name) {\r\n    const { patients } = this.state\r\n    return Object.values(patients).find(patient => {\r\n      return patient.patientName === name\r\n    })\r\n  }\r\n\r\n  getPatientIdByValue(value) {\r\n    const { patients } = this.state\r\n    for (let [key, val] of Object.entries(patients)) {\r\n      if (JSON.stringify(val) === JSON.stringify(value)) {\r\n        return key\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    try {\r\n      this.patientsRef = base.syncState(TABLE_NAME, {\r\n        context: this,\r\n        state: TABLE_NAME\r\n      })\r\n    }\r\n    catch (error) {\r\n      console.log(error)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      patients,\r\n      day,\r\n      selectedPatientId,\r\n      allServices,\r\n      allDiagnoses,\r\n      allDoctors,\r\n      allDates,\r\n      allOffices,\r\n    } = this.state\r\n\r\n    return (\r\n      <Container className='app'>\r\n        <MainForm\r\n          addPatien={ this.addPatient }\r\n          getPatientByName={ this.getPatientByName }\r\n          setSelectedPatientId={ this.setSelectedPatientId }\r\n          getPatientIdByValue={ this.getPatientIdByValue }\r\n          setPatientInfo={ this.setPatientInfo }\r\n          patients={ patients }\r\n          selectedPatientId={ selectedPatientId }\r\n          setAllData={ this.setAllData }\r\n          day={ day }\r\n          allServices={ allServices }\r\n          allDiagnoses={ allDiagnoses }\r\n          allDoctors={ allDoctors }\r\n          allDates={ allDates }\r\n          allOffices={ allOffices }\r\n        />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './containers/App/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()"],"sourceRoot":""}